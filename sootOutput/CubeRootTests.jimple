public class javaT.lang.StrictMath.CubeRootTests extends java.lang.Object
{
    public static java.io.InterruptedIOException[][][] field_12830;
    public volatile java.lang.ref.WeakReference field_12833;
    public static long TRAPCOUNT;

    static void <clinit>()
    {
        return;

        return;
    }

    private void <init>()
    {
        javaT.lang.StrictMath.CubeRootTests r0;
        java.lang.Object r1;
        java.lang.ref.WeakReference $r2;

        r0 := @this: javaT.lang.StrictMath.CubeRootTests;

        r1 = new java.lang.Object;

        specialinvoke r1.<java.lang.Object: void <init>()>();

        $r2 = new java.lang.ref.WeakReference;

        specialinvoke $r2.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r1);

        r0.<javaT.lang.StrictMath.CubeRootTests: java.lang.ref.WeakReference field_12833> = $r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void main(java.lang.String[])
    {
        int $i0, i1;
        java.lang.StringBuilder $r0, $r2, $r3;
        java.io.PrintStream $r1;
        java.lang.String $r4;
        java.lang.RuntimeException $r5;
        java.lang.String[] r6;

        r6 := @parameter0: java.lang.String[];

        $i0 = staticinvoke <javaT.lang.StrictMath.CubeRootTests: int testCubeRoot()>();

        i1 = 0 + $i0;

        return;

        return;
    }

    static int testCubeRoot()
    {
        double[] $r0, r193, r194, r195, r196, r197, r198, r199, r200, r201, r202, r203, r204, r205, r206, r207, r208, r209, r210, r211, r212, r213, r214, r215, r216, r217, r218, r219, r220, r221, r222, r223, r224, r225, r226, r227, r228, r229, r230, r231, r232, r233, r234, r235, r236, r237, r238, r239, r240, r241, r242, r243, r244, r245, r246, r247, r248, r249, r250, r251, r252, r253, r254, r255, r256, r257, r258, r259, r260, r261, r262, r263, r264, r265, r266, r267, r268, r269, r270, r271, r272, r273, r274, r275, r276, r277, r278, r279, r280, r281, r282, r283, r284, r285, r286, r287, r288, r289, r290, r291, r292, r293, r294, r295, r296, r297, r298, r299, r300, r301, r302, r303, r304, r305, r306, r307, r308, r309, r310, r311, r312, r313, r314, r315, r316, r317, r318, r319, r320, r321, r322, r323, r324, r325, r326, r327, r328, r329, r330, r331, r332, r333, r334, r335, r336, r337, r338, r339, r340, r341, r342, r343, r344, r345, r346, r347, r348, r349, r350, r351, r352, r353, r354, r355, r356, r357, r358, r359, r360, r361, r362, r363, r364, r365, r366, r367, r368, r369, r370, r371, r372, r373, r374, r375, r376, r377, r378, r379, r380, r381, r382, r383, r384, r385, r386, r387, r388, r389, r390, r391, r392, r393, r394, r395, r396, r397, r398, r399, r400, r401, r402, r403, r404, r405, r406, r407, r408, r409, r410, r411, r412, r413, r414, r415, r416, r417, r418, r419, r420, r421, r422, r423, r424, r425, r426, r427, r428, r429, r430, r431, r432, r433, r434, r435, r436, r437, r438, r439, r440, r441, r442, r443, r444, r445, r446, r447, r448, r449, r450, r451, r452, r453, r454, r455, r456, r457, r458, r459, r460, r461, r462, r463, r464, r465, r466, r467, r468, r469, r470, r471, r472, r473, r474, r475, r476, r477, r478, r479, r480, r481, r482, r483, r484, r485, r486, r487, r488, r489, r490, r491, r492, r493, r494, r495, r496, r497, r498, r499, r500, r501, r502, r503, r504, r505, r506, r507, r508, r509, r510, r511, r512, r513, r514, r515, r516, r517, r518, r519, r520, r521, r522, r523, r524, r525, r526, r527, r528, r529, r530, r531, r532, r533, r534, r535, r536, r537, r538, r539, r540, r541, r542, r543, r544, r545, r546, r547, r548, r549, r550, r551, r552, r553, r554, r555, r556, r557, r558, r559, r560, r561, r562, r563, r564, r565, r566, r567, r568, r569, r570, r571, r572, r573, r574, r575, r576, r577, r578, r579, r580, r581, r582, r583, r584;
        double d0, d1;
        java.lang.String $r1, $r3, $r4, $r5, $r6, $r21, $r22, $r24, $r25, $r26, $r28, $r30, $r31, $r32, $r61, $r62, $r63, $r64, $r65, $r66, $r67, $r68, $r69, $r70, $r71, $r72, $r73, $r74, $r75, $r76, $r77, $r78, $r79, $r80, $r81, $r82, $r83, $r84, $r85, $r86, $r87, $r88, $r89, $r90, $r91, $r92, $r93, $r94, $r95, $r96, $r97, $r98, $r99, $r100, $r101, $r102, $r103, $r104, $r105, $r106, $r107, $r108, $r109, $r110, $r111, $r112, $r113, $r114, $r115, $r116, $r117, $r118, $r119, $r120, $r121, $r122, $r123, $r124, $r125, $r126, $r127, $r128, $r129, $r130, $r131, $r132, $r133, $r134, $r135, $r136, $r137, $r138, $r139, $r140, $r141, $r142, $r143, $r144, $r145, $r146, $r147, $r148, $r149, $r150, $r151, $r152, $r153, $r154, $r155, $r156, $r157, $r158, $r159, $r160, $r161, $r162, $r163, $r164, $r165, $r166, $r167, r189, r587;
        java.lang.ref.PhantomReference $r2, $r16, $r29, $r34, $r39, $r53, $r180;
        java.awt.Polygon $r7;
        java.lang.ref.ReferenceQueue $r8, $r17, $r35, $r40, $r41, $r54, $r181;
        java.lang.Object $r9, $r15, $r33, $r38, $r52, $r172, $r176, $r179;
        java.lang.ref.SoftReference $r10, $r11, $r23, $r27, $r177;
        java.util.LinkedList $r12, $r13, $r19, $r46, $r50, $r182;
        java.awt.AWTError $r14;
        java.util.ArrayList $r18, $r37, $r45, $r55;
        int $i0, $i2, i7, i8, i9, i10, i11, i12, i13;
        java.lang.NullPointerException $r20, $r60;
        java.util.Random $r36, r185;
        java.awt.ScrollPane $r42;
        java.io.FileReader $r43;
        java.beans.IntrospectionException $r44;
        java.security.Permissions $r47;
        java.awt.Choice $r48;
        java.awt.Choice$AccessibleAWTChoice $r49;
        java.lang.ref.WeakReference $r51, $r173;
        java.awt.PageAttributes $r56;
        java.io.InterruptedIOException $r57;
        java.lang.OutOfMemoryError $r58, $r59;
        long $l3, $l4, $l5, $l6;
        java.awt.List$AccessibleAWTList$AccessibleAWTListChild $r168;
        java.awt.List$AccessibleAWTList $r169;
        java.awt.List $r170, r586;
        java.io.PrintWriter $r171;
        java.io.SerializablePermission $r174;
        java.security.cert.CRLException $r175;
        java.net.UnknownHostException $r178;
        java.util.IllformedLocaleException $r183;
        java.io.InterruptedIOException[][][] r184;
        java.io.InterruptedIOException[][] r186;
        java.io.InterruptedIOException[] r187;
        double[][] r190, r191;

        r184 = <javaT.lang.StrictMath.CubeRootTests: java.io.InterruptedIOException[][][] field_12830>;

        r185 = new java.util.Random;

        specialinvoke r185.<java.util.Random: void <init>(long)>(0L);

        i7 = lengthof r184;

     label1:
        i13 = 0;

     label2:
        return i13;

        catch java.lang.NullPointerException from label2 to label2 with label2;
        catch java.lang.OutOfMemoryError from label1 to label1 with label1;
    }
}
